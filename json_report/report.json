{"created": 1693904658.4257367, "duration": 1.7404005527496338, "exitcode": 1, "root": "D:\\soft\\Git\\test", "environment": {}, "summary": {"failed": 3, "passed": 1, "total": 4, "collected": 29, "deselected": 25}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "business/__init__.py", "type": "Package"}, {"nodeid": "business/dba/__init__.py", "type": "Package"}, {"nodeid": "business/login/__init__.py", "type": "Package"}, {"nodeid": "common/__init__.py", "type": "Package"}, {"nodeid": "common/dblink/__init__.py", "type": "Package"}, {"nodeid": "config/__init__.py", "type": "Package"}, {"nodeid": "instance/__init__.py", "type": "Package"}, {"nodeid": "interface/__init__.py", "type": "Package"}, {"nodeid": "interface/dba/__init__.py", "type": "Package"}, {"nodeid": "interface/login/__init__.py", "type": "Package"}, {"nodeid": "interface/rule/__init__.py", "type": "Package"}, {"nodeid": "interface/system/__init__.py", "type": "Package"}, {"nodeid": "testcase/__init__.py", "type": "Package"}, {"nodeid": "testdata/__init__.py", "type": "Package"}, {"nodeid": "util/__init__.py", "type": "Package"}]}, {"nodeid": "business/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "business/dba/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "business/login/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "common/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "common/dblink/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "config/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "instance/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "interface/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "interface/dba/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "interface/login/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "interface/rule/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "interface/system/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "testcase/test_01_1001_login.py::TestLogin", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1001_login.py::TestLogin::test_login[data0]", "type": "Function", "lineno": 18, "deselected": true}, {"nodeid": "testcase/test_01_1001_login.py::TestLogin::test_logout[data0]", "type": "Function", "lineno": 40, "deselected": true}]}, {"nodeid": "testcase/test_01_1001_login.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1001_login.py::TestLogin", "type": "Class"}]}, {"nodeid": "testcase/test_01_1002_logout.py::TestLogout", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1002_logout.py::TestLogout::test_logout[data0]", "type": "Function", "lineno": 20, "deselected": true}]}, {"nodeid": "testcase/test_01_1002_logout.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1002_logout.py::TestLogout", "type": "Class"}]}, {"nodeid": "testcase/test_01_1003_dba_add.py::TestDbaAdd", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1003_dba_add.py::TestDbaAdd::test_dba_add[data0]", "type": "Function", "lineno": 22, "deselected": true}]}, {"nodeid": "testcase/test_01_1003_dba_add.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1003_dba_add.py::TestDbaAdd", "type": "Class"}]}, {"nodeid": "testcase/test_01_1004_dba_set_deployment.py::TestDbaSetDeployment", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1004_dba_set_deployment.py::TestDbaSetDeployment::test_dba_set_deployment[data0]", "type": "Function", "lineno": 21, "deselected": true}]}, {"nodeid": "testcase/test_01_1004_dba_set_deployment.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1004_dba_set_deployment.py::TestDbaSetDeployment", "type": "Class"}]}, {"nodeid": "testcase/test_01_1005_dba_set_status.py::TestDbaSetStatus", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1005_dba_set_status.py::TestDbaSetStatus::test_dba_set_start[data0]", "type": "Function", "lineno": 18, "deselected": true}]}, {"nodeid": "testcase/test_01_1005_dba_set_status.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1005_dba_set_status.py::TestDbaSetStatus", "type": "Class"}]}, {"nodeid": "testcase/test_01_1006_dba_set_status.py::TestDbaSetStatus1", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1006_dba_set_status.py::TestDbaSetStatus1::test_dba_set_stop[data0]", "type": "Function", "lineno": 20, "deselected": true}]}, {"nodeid": "testcase/test_01_1006_dba_set_status.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1006_dba_set_status.py::TestDbaSetStatus1", "type": "Class"}]}, {"nodeid": "testcase/test_01_1007_dba_del.py::TestDbDdel", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1007_dba_del.py::TestDbDdel::test_dba_del[data0]", "type": "Function", "lineno": 19, "deselected": true}]}, {"nodeid": "testcase/test_01_1007_dba_del.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1007_dba_del.py::TestDbDdel", "type": "Class"}]}, {"nodeid": "testcase/test_01_1008_dba_connect.py::TestEdit", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1008_dba_connect.py::TestEdit::test_dba_connect[data0]", "type": "Function", "lineno": 20, "deselected": true}]}, {"nodeid": "testcase/test_01_1008_dba_connect.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1008_dba_connect.py::TestEdit", "type": "Class"}]}, {"nodeid": "testcase/test_01_1009_connect.py::TestEdit", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1009_connect.py::TestEdit::test_connect[data0]", "type": "Function", "lineno": 20, "deselected": true}]}, {"nodeid": "testcase/test_01_1009_connect.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1009_connect.py::TestEdit", "type": "Class"}]}, {"nodeid": "testcase/test_01_2001_scene_daili.py::TestSceneDaili", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2001_scene_daili.py::TestSceneDaili::test_scene01[data0]", "type": "Function", "lineno": 27, "deselected": true}]}, {"nodeid": "testcase/test_01_2001_scene_daili.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2001_scene_daili.py::TestSceneDaili", "type": "Class"}]}, {"nodeid": "testcase/test_01_2002_scene_daili.py::TestSceneDaili", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2002_scene_daili.py::TestSceneDaili::test_scene01[data0]", "type": "Function", "lineno": 27, "deselected": true}]}, {"nodeid": "testcase/test_01_2002_scene_daili.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2002_scene_daili.py::TestSceneDaili", "type": "Class"}]}, {"nodeid": "testcase/test_01_2003_scene_daili.py::TestSceneDaili", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2003_scene_daili.py::TestSceneDaili::test_scene01[data0]", "type": "Function", "lineno": 22, "deselected": true}]}, {"nodeid": "testcase/test_01_2003_scene_daili.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2003_scene_daili.py::TestSceneDaili", "type": "Class"}]}, {"nodeid": "testcase/test_01_2004_scene_daili.py::TestSceneDaili", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2004_scene_daili.py::TestSceneDaili::test_scene01[data0]", "type": "Function", "lineno": 20, "deselected": true}]}, {"nodeid": "testcase/test_01_2004_scene_daili.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2004_scene_daili.py::TestSceneDaili", "type": "Class"}]}, {"nodeid": "testcase/test_01_2005_scene_daili.py::TestSceneDaili", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2005_scene_daili.py::TestSceneDaili::test_scene01[data0]", "type": "Function", "lineno": 18, "deselected": true}]}, {"nodeid": "testcase/test_01_2005_scene_daili.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_2005_scene_daili.py::TestSceneDaili", "type": "Class"}]}, {"nodeid": "testcase/test_01_3001dba_delall.py::TestDbaDelall", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_3001dba_delall.py::TestDbaDelall::test_dba_delall", "type": "Function", "lineno": 17, "deselected": true}]}, {"nodeid": "testcase/test_01_3001dba_delall.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_3001dba_delall.py::TestDbaDelall", "type": "Class"}]}, {"nodeid": "testcase/test_02_1001_rules_add.py::TestRules", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1001_rules_add.py::TestRules::test_01[data0]", "type": "Function", "lineno": 22, "deselected": true}]}, {"nodeid": "testcase/test_02_1001_rules_add.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1001_rules_add.py::TestRules", "type": "Class"}]}, {"nodeid": "testcase/test_02_1002_rules_edit.py::TestRules", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1002_rules_edit.py::TestRules::test_01[data0]", "type": "Function", "lineno": 22, "deselected": true}]}, {"nodeid": "testcase/test_02_1002_rules_edit.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1002_rules_edit.py::TestRules", "type": "Class"}]}, {"nodeid": "testcase/test_02_1003_rules_del.py::TestRules", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1003_rules_del.py::TestRules::test_01[data0]", "type": "Function", "lineno": 15, "deselected": true}]}, {"nodeid": "testcase/test_02_1003_rules_del.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1003_rules_del.py::TestRules", "type": "Class"}]}, {"nodeid": "testcase/test_02_1004_rule_add.py::TestRules", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1004_rule_add.py::TestRules::test_01[data0]", "type": "Function", "lineno": 15, "deselected": true}]}, {"nodeid": "testcase/test_02_1004_rule_add.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1004_rule_add.py::TestRules", "type": "Class"}]}, {"nodeid": "testcase/test_02_1005_rule_edit.py::TestRules", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1005_rule_edit.py::TestRules::test_01[data0]", "type": "Function", "lineno": 17, "deselected": true}]}, {"nodeid": "testcase/test_02_1005_rule_edit.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1005_rule_edit.py::TestRules", "type": "Class"}]}, {"nodeid": "testcase/test_02_1006_rule_del.py::TestRules", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1006_rule_del.py::TestRules::test_01[data0]", "type": "Function", "lineno": 15, "deselected": true}]}, {"nodeid": "testcase/test_02_1006_rule_del.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_1006_rule_del.py::TestRules", "type": "Class"}]}, {"nodeid": "testcase/test_02_2001_strategy_add.py::TestStrategy", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_2001_strategy_add.py::TestStrategy::test_01[data0]", "type": "Function", "lineno": 17, "deselected": true}]}, {"nodeid": "testcase/test_02_2001_strategy_add.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_2001_strategy_add.py::TestStrategy", "type": "Class"}]}, {"nodeid": "testcase/test_02_2002_strategy_edit.py::TestStrategy", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_2002_strategy_edit.py::TestStrategy::test_01[data0]", "type": "Function", "lineno": 19, "deselected": true}]}, {"nodeid": "testcase/test_02_2002_strategy_edit.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_2002_strategy_edit.py::TestStrategy", "type": "Class"}]}, {"nodeid": "testcase/test_02_2003_strategy_del.py::TestStrategy", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_2003_strategy_del.py::TestStrategy::test_01[data0]", "type": "Function", "lineno": 19, "deselected": true}]}, {"nodeid": "testcase/test_02_2003_strategy_del.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_2003_strategy_del.py::TestStrategy", "type": "Class"}]}, {"nodeid": "testcase/test_02_3001_jixian_add.py::TestJixian", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_3001_jixian_add.py::TestJixian::test_01[data0]", "type": "Function", "lineno": 23}]}, {"nodeid": "testcase/test_02_3001_jixian_add.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_3001_jixian_add.py::TestJixian", "type": "Class"}]}, {"nodeid": "testcase/test_02_3002_jixian_edit.py::TestJixian", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_3002_jixian_edit.py::TestJixian::test_01[data0]", "type": "Function", "lineno": 23}]}, {"nodeid": "testcase/test_02_3002_jixian_edit.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_3002_jixian_edit.py::TestJixian", "type": "Class"}]}, {"nodeid": "testcase/test_02_3003_jixian_del.py::TestJixian", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_3003_jixian_del.py::TestJixian::test_01[data0]", "type": "Function", "lineno": 23}]}, {"nodeid": "testcase/test_02_3003_jixian_del.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_3003_jixian_del.py::TestJixian", "type": "Class"}]}, {"nodeid": "testcase/test_02_5001_rule_conf.py::TestRuleCof", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_5001_rule_conf.py::TestRuleCof::test_01[data0]", "type": "Function", "lineno": 23}]}, {"nodeid": "testcase/test_02_5001_rule_conf.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_02_5001_rule_conf.py::TestRuleCof", "type": "Class"}]}, {"nodeid": "testcase/__init__.py", "outcome": "passed", "result": [{"nodeid": "testcase/test_01_1001_login.py", "type": "Module"}, {"nodeid": "testcase/test_01_1002_logout.py", "type": "Module"}, {"nodeid": "testcase/test_01_1003_dba_add.py", "type": "Module"}, {"nodeid": "testcase/test_01_1004_dba_set_deployment.py", "type": "Module"}, {"nodeid": "testcase/test_01_1005_dba_set_status.py", "type": "Module"}, {"nodeid": "testcase/test_01_1006_dba_set_status.py", "type": "Module"}, {"nodeid": "testcase/test_01_1007_dba_del.py", "type": "Module"}, {"nodeid": "testcase/test_01_1008_dba_connect.py", "type": "Module"}, {"nodeid": "testcase/test_01_1009_connect.py", "type": "Module"}, {"nodeid": "testcase/test_01_2001_scene_daili.py", "type": "Module"}, {"nodeid": "testcase/test_01_2002_scene_daili.py", "type": "Module"}, {"nodeid": "testcase/test_01_2003_scene_daili.py", "type": "Module"}, {"nodeid": "testcase/test_01_2004_scene_daili.py", "type": "Module"}, {"nodeid": "testcase/test_01_2005_scene_daili.py", "type": "Module"}, {"nodeid": "testcase/test_01_3001dba_delall.py", "type": "Module"}, {"nodeid": "testcase/test_02_1001_rules_add.py", "type": "Module"}, {"nodeid": "testcase/test_02_1002_rules_edit.py", "type": "Module"}, {"nodeid": "testcase/test_02_1003_rules_del.py", "type": "Module"}, {"nodeid": "testcase/test_02_1004_rule_add.py", "type": "Module"}, {"nodeid": "testcase/test_02_1005_rule_edit.py", "type": "Module"}, {"nodeid": "testcase/test_02_1006_rule_del.py", "type": "Module"}, {"nodeid": "testcase/test_02_2001_strategy_add.py", "type": "Module"}, {"nodeid": "testcase/test_02_2002_strategy_edit.py", "type": "Module"}, {"nodeid": "testcase/test_02_2003_strategy_del.py", "type": "Module"}, {"nodeid": "testcase/test_02_3001_jixian_add.py", "type": "Module"}, {"nodeid": "testcase/test_02_3002_jixian_edit.py", "type": "Module"}, {"nodeid": "testcase/test_02_3003_jixian_del.py", "type": "Module"}, {"nodeid": "testcase/test_02_5001_rule_conf.py", "type": "Module"}]}, {"nodeid": "testdata/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "util/__init__.py", "outcome": "passed", "result": []}], "tests": [{"nodeid": "testcase/test_02_3001_jixian_add.py::TestJixian::test_01[data0]", "lineno": 23, "outcome": "failed", "keywords": ["test_01[data0]", "parametrize", "smoke_jixian", "__allure_display_name__", "pytestmark", "data0", "TestJixian", "allure_label", "test_02_3001_jixian_add.py", "testcase/__init__.py", "test"], "setup": {"duration": 0.0010158999939449131, "outcome": "passed"}, "call": {"duration": 0.12682760000461712, "outcome": "failed", "crash": {"path": "D:\\soft\\Git\\test\\interface\\rule\\Intelligent_protection_set.py", "lineno": 105, "message": "AttributeError: 'IntelligentProtectionFace' object has no attribute 'request_find_id'. Did you mean: 'request_edit'?"}, "traceback": [{"path": "testcase\\test_02_3001_jixian_add.py", "lineno": 35, "message": ""}, {"path": "interface\\rule\\Intelligent_protection_set.py", "lineno": 105, "message": "AttributeError"}], "longrepr": "self = <testcase.test_02_3001_jixian_add.TestJixian object at 0x0000012BDAA91C90>\ndata = {'jixianName': 'jixian_001', 'sourceName': 'testMysql2'}\n\n    @pytest.mark.smoke_jixian\n    @pytest.mark.parametrize(\"data\", test_data)\n    @allure.title(\"\u667a\u80fd\u57fa\u7ebf\u751f\u6210\u6d4b\u8bd5\")\n    # @allure.story(\"\")\n    def test_01(self, data):\n        \"\"\"\n        \u667a\u80fd\u57fa\u7ebf\u751f\u6210\u6d4b\u8bd5\n        :return:\n        \"\"\"\n        if IntelligentProtectionFace().request_find_jixianid(data[\"sourceName\"], data[\"jixianName\"]) != 0:\n            with allure.step(\"#a.\u5220\u9664\u667a\u80fd\u57fa\u7ebf\u64cd\u4f5c\"):\n>               res = IntelligentProtectionFace().request_del_jixian(data[\"sourceName\"], data[\"jixianName\"])\n\ntestcase\\test_02_3001_jixian_add.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <interface.rule.Intelligent_protection_set.IntelligentProtectionFace object at 0x0000012BDAA93F70>\nsourceName = 'testMysql2', jixianname = 'jixian_001'\n\n    def request_del_jixian(self, sourceName=None, jixianname=None):\n>       jixianId = self.request_find_id(sourceName, jixianname)\nE       AttributeError: 'IntelligentProtectionFace' object has no attribute 'request_find_id'. Did you mean: 'request_edit'?\n\ninterface\\rule\\Intelligent_protection_set.py:105: AttributeError"}, "teardown": {"duration": 0.0012777000083588064, "outcome": "passed"}}, {"nodeid": "testcase/test_02_3002_jixian_edit.py::TestJixian::test_01[data0]", "lineno": 23, "outcome": "failed", "keywords": ["test_01[data0]", "parametrize", "smoke_jixian", "__allure_display_name__", "pytestmark", "data0", "TestJixian", "allure_label", "test_02_3002_jixian_edit.py", "testcase/__init__.py", "test"], "setup": {"duration": 0.000640199999907054, "outcome": "passed"}, "call": {"duration": 0.2131078999955207, "outcome": "failed", "crash": {"path": "D:\\soft\\Git\\test\\interface\\rule\\Intelligent_protection_set.py", "lineno": 66, "message": "AttributeError: 'IntelligentProtectionFace' object has no attribute 'request_find_id'. Did you mean: 'request_edit'?"}, "traceback": [{"path": "testcase\\test_02_3002_jixian_edit.py", "lineno": 48, "message": ""}, {"path": "interface\\rule\\Intelligent_protection_set.py", "lineno": 66, "message": "AttributeError"}], "longrepr": "self = <testcase.test_02_3002_jixian_edit.TestJixian object at 0x0000012BDAA92290>\ndata = {'NewjixianName': 'jixian_002', 'jixianName': 'jixian_001', 'sourceName': 'testMysql2'}\n\n    @pytest.mark.smoke_jixian\n    @pytest.mark.parametrize(\"data\", test_data)\n    @allure.title(\"\u667a\u80fd\u57fa\u7ebf\u4fee\u6539\u6d4b\u8bd5_\u540d\u5b57\")\n    # @allure.story(\"\")\n    def test_01(self, data):\n        \"\"\"\n        \u667a\u80fd\u57fa\u7ebf\u540d\u5b57\u4fee\u6539\n        \"\"\"\n        if IntelligentProtectionFace().request_find_jixianid(data[\"sourceName\"], data[\"jixianName\"]) == 0:\n            with allure.step(\"#a.\u751f\u6210\u667a\u80fd\u57fa\u7ebf\u64cd\u4f5c\"):\n                res = IntelligentProtectionFace().request_generate(data[\"sourceName\"], data[\"jixianName\"])\n                assert res[\"data\"] == \"success\"\n            with allure.step(\"#b.\u68c0\u67e5\u662f\u5426\u751f\u6210\u57fa\u7ebf\u6210\u529f\"):\n                res = IntelligentProtectionFace().request_find_jixianid(data[\"sourceName\"], data[\"jixianName\"])\n                assert res != 0\n        # \u5982\u679c\u6709\u8981\u4fee\u6539\u540d\u5b57\u7684\u57fa\u7ebf\u9700\u8981\u5220\u9664\n        if IntelligentProtectionFace().request_find_jixianid(data[\"sourceName\"], data[\"NewjixianName\"]) != 0:\n            with allure.step(\"#c.\u5220\u9664\u540d\u5b57\u4e3a\"+data[\"NewjixianName\"]+\"\u7684\u57fa\u7ebf\"):\n                res = IntelligentProtectionFace().request_del_jixian(data[\"sourceName\"], data[\"NewjixianName\"])\n                assert res[\"data\"] == \"success\"\n            with allure.step(\"#d.\u68c0\u67e5\"+data[\"NewjixianName\"]+\"\u540d\u5b57\u7684\u57fa\u7ebf\u662f\u90fd\u5220\u9664\u6210\u529f\"):\n                res = IntelligentProtectionFace().request_find_jixianid(data[\"sourceName\"], data[\"jixianName\"])\n                assert res != 0\n        with allure.step(\"#1.\u4fee\u6539\u57fa\u7ebf_\u540d\u5b57\u4e3ajixian_002\"):\n>           res = res = IntelligentProtectionFace().request_edit(sourceName=data[\"sourceName\"], baselineId=data[\"jixianName\"],name=data[\"NewjixianName\"])\n\ntestcase\\test_02_3002_jixian_edit.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <interface.rule.Intelligent_protection_set.IntelligentProtectionFace object at 0x0000012BDAB6D780>\nsourceName = 'testMysql2', baselineId = 'jixian_001', name = 'jixian_002'\n\n    def request_edit(self, sourceName, baselineId, name):\n        header = {\n            \"Authorization\": token_sec\n        }\n        # \u67e5\u8be2\u667a\u80fd\u57fa\u7ebfid\n>       id = self.request_find_id(sourceName, baselineId)\nE       AttributeError: 'IntelligentProtectionFace' object has no attribute 'request_find_id'. Did you mean: 'request_edit'?\n\ninterface\\rule\\Intelligent_protection_set.py:66: AttributeError"}, "teardown": {"duration": 0.001181999992695637, "outcome": "passed"}}, {"nodeid": "testcase/test_02_3003_jixian_del.py::TestJixian::test_01[data0]", "lineno": 23, "outcome": "failed", "keywords": ["test_01[data0]", "parametrize", "smoke_jixian", "__allure_display_name__", "pytestmark", "data0", "TestJixian", "allure_label", "test_02_3003_jixian_del.py", "testcase/__init__.py", "test"], "setup": {"duration": 0.0006336999940685928, "outcome": "passed"}, "call": {"duration": 0.08282140000665095, "outcome": "failed", "crash": {"path": "D:\\soft\\Git\\test\\interface\\rule\\Intelligent_protection_set.py", "lineno": 105, "message": "AttributeError: 'IntelligentProtectionFace' object has no attribute 'request_find_id'. Did you mean: 'request_edit'?"}, "traceback": [{"path": "testcase\\test_02_3003_jixian_del.py", "lineno": 43, "message": ""}, {"path": "interface\\rule\\Intelligent_protection_set.py", "lineno": 105, "message": "AttributeError"}], "longrepr": "self = <testcase.test_02_3003_jixian_del.TestJixian object at 0x0000012BDAA92980>\ndata = {'jixianName': 'jixian_003', 'sourceName': 'testMysql2'}\n\n    @pytest.mark.smoke_jixian\n    @pytest.mark.parametrize(\"data\", test_data)\n    @allure.title(\"\u667a\u80fd\u57fa\u7ebf\u5220\u9664\u6d4b\u8bd5\")\n    # @allure.story(\"\")\n    def test_01(self, data):\n        \"\"\"\n        \u667a\u80fd\u57fa\u7ebf\u5220\u9664\n        \"\"\"\n    \n        # \u5982\u679c\u6ca1\u6709\u88ab\u5220\u9664\u7684\u57fa\u7ebf\uff0c\u5219\u751f\u6210\n        if IntelligentProtectionFace().request_find_jixianid(data[\"sourceName\"], data[\"jixianName\"]) == 0:\n            with allure.step(\"#a.\u751f\u6210\u667a\u80fd\u57fa\u7ebf\u64cd\u4f5c\"):\n                res = IntelligentProtectionFace().request_generate(data[\"sourceName\"], data[\"jixianName\"])\n                assert res[\"data\"] == \"success\"\n            with allure.step(\"#b.\u68c0\u67e5\u662f\u5426\u751f\u6210\u57fa\u7ebf\u6210\u529f\"):\n                res = IntelligentProtectionFace().request_find_jixianid(data[\"sourceName\"], data[\"jixianName\"])\n                assert res != 0\n    \n        with allure.step(\"#1.\u5220\u9664\u540d\u5b57\u4e3a\"+data[\"jixianName\"]+\"\u7684\u57fa\u7ebf\"):\n>           res = IntelligentProtectionFace().request_del_jixian(data[\"sourceName\"], data[\"jixianName\"])\n\ntestcase\\test_02_3003_jixian_del.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <interface.rule.Intelligent_protection_set.IntelligentProtectionFace object at 0x0000012BDABB5900>\nsourceName = 'testMysql2', jixianname = 'jixian_003'\n\n    def request_del_jixian(self, sourceName=None, jixianname=None):\n>       jixianId = self.request_find_id(sourceName, jixianname)\nE       AttributeError: 'IntelligentProtectionFace' object has no attribute 'request_find_id'. Did you mean: 'request_edit'?\n\ninterface\\rule\\Intelligent_protection_set.py:105: AttributeError"}, "teardown": {"duration": 0.0011457999935373664, "outcome": "passed"}}, {"nodeid": "testcase/test_02_5001_rule_conf.py::TestRuleCof::test_01[data0]", "lineno": 23, "outcome": "passed", "keywords": ["test_01[data0]", "parametrize", "smoke_jixian", "__allure_display_name__", "pytestmark", "data0", "TestRuleCof", "allure_label", "test_02_5001_rule_conf.py", "testcase/__init__.py", "test"], "setup": {"duration": 0.0005412000027718022, "outcome": "passed"}, "call": {"duration": 0.15353319999121595, "outcome": "passed"}, "teardown": {"duration": 0.0011540999985300004, "outcome": "passed"}}], "warnings": [{"message": "This method will be removed in Python 3.12. Use 'parser.read_file()' instead.", "category": "DeprecationWarning", "when": "collect", "filename": "C:\\Users\\000000\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\secsmart_autotest\\lib\\util\\ini_config_file.py", "lineno": 31}, {"message": "This method will be removed in Python 3.12. Use 'parser.read_file()' instead.", "category": "DeprecationWarning", "when": "collect", "filename": "C:\\Users\\000000\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\secsmart_autotest\\lib\\util\\ini_config_file.py", "lineno": 31}, {"message": "This method will be removed in Python 3.12. Use 'parser.read_file()' instead.", "category": "DeprecationWarning", "when": "collect", "filename": "C:\\Users\\000000\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\secsmart_autotest\\lib\\util\\ini_config_file.py", "lineno": 31}, {"message": "Unverified HTTPS request is being made to host '192.168.1.80'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings", "category": "InsecureRequestWarning", "when": "runtest", "filename": "C:\\Users\\000000\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\urllib3\\connectionpool.py", "lineno": 1056}, {"message": "Unverified HTTPS request is being made to host '192.168.1.80'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings", "category": "InsecureRequestWarning", "when": "runtest", "filename": "C:\\Users\\000000\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\urllib3\\connectionpool.py", "lineno": 1056}, {"message": "Unverified HTTPS request is being made to host '192.168.1.80'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings", "category": "InsecureRequestWarning", "when": "runtest", "filename": "C:\\Users\\000000\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\urllib3\\connectionpool.py", "lineno": 1056}, {"message": "Unverified HTTPS request is being made to host '192.168.1.80'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings", "category": "InsecureRequestWarning", "when": "runtest", "filename": "C:\\Users\\000000\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\urllib3\\connectionpool.py", "lineno": 1056}]}